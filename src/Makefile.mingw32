# this should work when compiling using the w64-mingw32 compiler, using the ArchLinux packages
# you need to set ARCH to x86_64 or i686

all: ../noteye.exe ../hydra.exe


#for development:
#CFLAGS=-Wall -Werror -g
#CC=g++-4.6

#for release:
CFLAGS=-O3 -Wall -std=c++0x -Wno-narrowing
CC=$(ARCH)-w64-mingw32-g++

TGT=

#link with lua or luajit?
#add -DAVOID_FFI if using standard Lua
#LUAVER=-llua5.1
LUAVER=-lluajit-5.1

# note: for Raspberry Pi (and possibly others) add -DRASPBERRY_FIX
DEF=-DHYDRA -DWINDOWS -DOPENGL -DPDC_WIDE -DPDC_FORCE_UTF8

#noteye: noteye.cpp noteye.h util.cpp screen.cpp tiles.cpp gfx.cpp linux.cpp image.cpp fpp.cpp font.cpp internal.cpp stream.cpp
#	$(CC) noteye.cpp -o noteye -lSDL -lSDL_image -llua5.1 -lutil -DLINUX -lSDL_net -lz

libnoteye.o: libnoteye.cpp noteye.h util.cpp screen.cpp tiles.cpp gfx.cpp linux.cpp image.cpp fpp.cpp font.cpp internal.cpp stream.cpp consout.cpp sound.cpp lua.cpp iso.cpp noteye-curses.h opengl.cpp drawtile.cpp sdltex.cpp utf8.cpp obsolete.cpp
	$(CC) -fpic -I/usr/include/lua5.1 -I/usr/$(ARCH)-w64-mingw32/include/pdcurses libnoteye.cpp -c -o libnoteye.o $(CFLAGS) $(DEF) $(TGT)

noteye-jni.o: noteye-jni.cpp noteye.h
	$(CC) -fpic -I. noteye-jni.cpp -c -o noteye-jni.o $(CFLAGS) $(DEF)

# dynamic library (used for development)
../noteye.dll: libnoteye.o noteye-jni.o
	$(CC) -shared -Wl,-soname,libnoteye.so -o ../noteye.dll libnoteye.o noteye-jni.o -lSDL2 -lSDL2_image $(LUAVER) -lopengl32 -lSDL2_mixer -lSDL2_net  $(TGT) -lz -lSDL2_ttf -lcurses

# static library (used for Steam version)
../libnoteye.a: libnoteye.o noteye-jni.o
	ar rcs ../libnoteye.a libnoteye.o noteye-jni.o

hydra.o: noteye-curses.h ../hydra/classes.cpp ../hydra/hydra.cpp ../hydra/mainmenu.cpp ../hydra/ui.cpp ../hydra/tutorial.cpp ../hydra/weapons.cpp ../hydra/data.cpp ../hydra/save.cpp ../hydra/achieve.cpp ../hydra/utils.cpp ../hydra/level.cpp ../hydra/monster.cpp ../hydra/drawhydras.cpp
	$(CC) ../hydra/hydra.cpp -c -o hydra.o -DNOTEYE $(CFLAGS) $(TGT) $(DEF) -fPIC

../hydraslayer.dll: hydra.o ../noteye.dll
	$(CC) -shared hydra.o -o ../hydraslayer.dll ../noteye.dll -lSDL2

../noteye.exe: ../noteye.dll ../hydraslayer.dll noteye-main.cpp ../hydra/hydra-noteye.cpp
	$(CC) $(DEF) -Wl,-rpath,. -Wl,-rpath,/usr/share/noteye noteye-main.cpp -o ../noteye.exe ../noteye.dll ../hydraslayer.dll -lopengl32 -lSDL2 $(TGT)
	strip ../noteye.exe

../hydra.exe: hydra.o ../noteye.dll ../hydraslayer.dll ../hydra/hydra.res
	$(CC) -DHYDRA -DHYDRAONLY -DOPENGL -O3 noteye-main.cpp ../hydra/hydra.res -o ../hydra.exe ../noteye.dll ../hydraslayer.dll -mwindows
	strip ../hydra.exe

../hydra/hydra.res: ../hydra/hydra.rc ../hydra/hydra.ico
	$(ARCH)-w64-mingw32-windres ../hydra/hydra.rc -O coff -o ../hydra/hydra.res

#../noteye: ../libnoteye.so noteye-main.cpp noteye.h
#	$(CC) -Wl,-rpath,. noteye-main.cpp -o ../noteye ../libnoteye.so

DESTDIR = /usr/share/noteye

clean:
	rm *.o

# note about the install script:
# unfortunately I cannot set the group ID to games since it would cause a security hole (NotEye is scriptable)
# I don't know how to solve this (other than creating a separate hydra slayer executable), thus I simply make 
# the scores writeable by anyone

# uninstall will remove the global highscores!

